// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`typeEnabled > should configure the expected rules 1`] = `
{
  "@typescript-eslint/await-thenable": "error",
  "@typescript-eslint/dot-notation": "error",
  "@typescript-eslint/no-base-to-string": "error",
  "@typescript-eslint/no-duplicate-type-constituents": "error",
  "@typescript-eslint/no-floating-promises": "error",
  "@typescript-eslint/no-for-in-array": "error",
  "@typescript-eslint/no-implied-eval": "error",
  "@typescript-eslint/no-misused-promises": [
    "error",
    {
      "checksVoidReturn": false,
    },
  ],
  "@typescript-eslint/no-redundant-type-constituents": "error",
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
  "@typescript-eslint/no-unnecessary-condition": "error",
  "@typescript-eslint/no-unnecessary-type-assertion": "error",
  "@typescript-eslint/no-unsafe-argument": "off",
  "@typescript-eslint/no-unsafe-assignment": "off",
  "@typescript-eslint/no-unsafe-call": "off",
  "@typescript-eslint/no-unsafe-enum-comparison": "error",
  "@typescript-eslint/no-unsafe-member-access": "off",
  "@typescript-eslint/no-unsafe-return": "off",
  "@typescript-eslint/prefer-includes": "error",
  "@typescript-eslint/prefer-nullish-coalescing": "error",
  "@typescript-eslint/prefer-optional-chain": "error",
  "@typescript-eslint/prefer-reduce-type-parameter": "error",
  "@typescript-eslint/require-await": "error",
  "@typescript-eslint/restrict-plus-operands": "error",
  "@typescript-eslint/restrict-template-expressions": "error",
  "@typescript-eslint/switch-exhaustiveness-check": [
    "error",
    {
      "requireDefaultForNonUnion": true,
    },
  ],
  "@typescript-eslint/unbound-method": [
    "error",
    {
      "ignoreStatic": true,
    },
  ],
  "default-case": "off",
  "dot-notation": "off",
  "no-implied-eval": "off",
  "require-await": "off",
}
`;

exports[`typeEnabled > should track the list of type information required rules 1`] = `
[
  "@typescript-eslint/await-thenable",
  "@typescript-eslint/consistent-return",
  "@typescript-eslint/consistent-type-exports",
  "@typescript-eslint/dot-notation",
  "@typescript-eslint/naming-convention",
  "@typescript-eslint/no-array-delete",
  "@typescript-eslint/no-base-to-string",
  "@typescript-eslint/no-confusing-void-expression",
  "@typescript-eslint/no-duplicate-type-constituents",
  "@typescript-eslint/no-floating-promises",
  "@typescript-eslint/no-for-in-array",
  "@typescript-eslint/no-implied-eval",
  "@typescript-eslint/no-meaningless-void-operator",
  "@typescript-eslint/no-misused-promises",
  "@typescript-eslint/no-mixed-enums",
  "@typescript-eslint/no-redundant-type-constituents",
  "@typescript-eslint/no-throw-literal",
  "@typescript-eslint/no-unnecessary-boolean-literal-compare",
  "@typescript-eslint/no-unnecessary-condition",
  "@typescript-eslint/no-unnecessary-qualifier",
  "@typescript-eslint/no-unnecessary-template-expression",
  "@typescript-eslint/no-unnecessary-type-arguments",
  "@typescript-eslint/no-unnecessary-type-assertion",
  "@typescript-eslint/no-unnecessary-type-parameters",
  "@typescript-eslint/no-unsafe-argument",
  "@typescript-eslint/no-unsafe-assignment",
  "@typescript-eslint/no-unsafe-call",
  "@typescript-eslint/no-unsafe-enum-comparison",
  "@typescript-eslint/no-unsafe-member-access",
  "@typescript-eslint/no-unsafe-return",
  "@typescript-eslint/no-unsafe-unary-minus",
  "@typescript-eslint/no-useless-template-literals",
  "@typescript-eslint/non-nullable-type-assertion-style",
  "@typescript-eslint/only-throw-error",
  "@typescript-eslint/prefer-destructuring",
  "@typescript-eslint/prefer-find",
  "@typescript-eslint/prefer-includes",
  "@typescript-eslint/prefer-nullish-coalescing",
  "@typescript-eslint/prefer-optional-chain",
  "@typescript-eslint/prefer-promise-reject-errors",
  "@typescript-eslint/prefer-readonly",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/prefer-reduce-type-parameter",
  "@typescript-eslint/prefer-regexp-exec",
  "@typescript-eslint/prefer-return-this-type",
  "@typescript-eslint/prefer-string-starts-ends-with",
  "@typescript-eslint/promise-function-async",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/require-await",
  "@typescript-eslint/restrict-plus-operands",
  "@typescript-eslint/restrict-template-expressions",
  "@typescript-eslint/return-await",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/switch-exhaustiveness-check",
  "@typescript-eslint/unbound-method",
  "@typescript-eslint/use-unknown-in-catch-callback-variable",
]
`;
