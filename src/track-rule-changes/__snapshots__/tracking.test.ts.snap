// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@angular-eslint/eslint-plugin'" 1`] = `
[
  "@angular-eslint/component-class-suffix",
  "@angular-eslint/component-max-inline-declarations",
  "@angular-eslint/component-selector",
  "@angular-eslint/consistent-component-styles",
  "@angular-eslint/contextual-decorator",
  "@angular-eslint/contextual-lifecycle",
  "@angular-eslint/directive-class-suffix",
  "@angular-eslint/directive-selector",
  "@angular-eslint/no-async-lifecycle-method",
  "@angular-eslint/no-attribute-decorator",
  "@angular-eslint/no-conflicting-lifecycle",
  "@angular-eslint/no-duplicates-in-metadata-arrays",
  "@angular-eslint/no-empty-lifecycle-method",
  "@angular-eslint/no-forward-ref",
  "@angular-eslint/no-input-prefix",
  "@angular-eslint/no-input-rename",
  "@angular-eslint/no-inputs-metadata-property",
  "@angular-eslint/no-lifecycle-call",
  "@angular-eslint/no-output-native",
  "@angular-eslint/no-output-on-prefix",
  "@angular-eslint/no-output-rename",
  "@angular-eslint/no-outputs-metadata-property",
  "@angular-eslint/no-pipe-impure",
  "@angular-eslint/no-queries-metadata-property",
  "@angular-eslint/pipe-prefix",
  "@angular-eslint/prefer-on-push-component-change-detection",
  "@angular-eslint/prefer-output-emitter-ref",
  "@angular-eslint/prefer-output-readonly",
  "@angular-eslint/prefer-signals",
  "@angular-eslint/prefer-standalone",
  "@angular-eslint/relative-url-prefix",
  "@angular-eslint/require-lifecycle-on-prototype",
  "@angular-eslint/require-localize-metadata",
  "@angular-eslint/runtime-localize",
  "@angular-eslint/sort-lifecycle-methods",
  "@angular-eslint/use-component-selector",
  "@angular-eslint/use-component-view-encapsulation",
  "@angular-eslint/use-injectable-provided-in",
  "@angular-eslint/use-lifecycle-interface",
  "@angular-eslint/use-pipe-transform-interface",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@angular-eslint/eslint-plugin-template'" 1`] = `
[
  "@angular-eslint/template/alt-text",
  "@angular-eslint/template/attributes-order",
  "@angular-eslint/template/banana-in-box",
  "@angular-eslint/template/button-has-type",
  "@angular-eslint/template/click-events-have-key-events",
  "@angular-eslint/template/conditional-complexity",
  "@angular-eslint/template/cyclomatic-complexity",
  "@angular-eslint/template/elements-content",
  "@angular-eslint/template/eqeqeq",
  "@angular-eslint/template/i18n",
  "@angular-eslint/template/interactive-supports-focus",
  "@angular-eslint/template/label-has-associated-control",
  "@angular-eslint/template/mouse-events-have-key-events",
  "@angular-eslint/template/no-any",
  "@angular-eslint/template/no-autofocus",
  "@angular-eslint/template/no-call-expression",
  "@angular-eslint/template/no-distracting-elements",
  "@angular-eslint/template/no-duplicate-attributes",
  "@angular-eslint/template/no-inline-styles",
  "@angular-eslint/template/no-interpolation-in-attributes",
  "@angular-eslint/template/no-negated-async",
  "@angular-eslint/template/no-positive-tabindex",
  "@angular-eslint/template/prefer-contextual-for-variables",
  "@angular-eslint/template/prefer-control-flow",
  "@angular-eslint/template/prefer-ngsrc",
  "@angular-eslint/template/prefer-self-closing-tags",
  "@angular-eslint/template/prefer-static-string-properties",
  "@angular-eslint/template/prefer-template-literal",
  "@angular-eslint/template/role-has-required-aria",
  "@angular-eslint/template/table-scope",
  "@angular-eslint/template/use-track-by-function",
  "@angular-eslint/template/valid-aria",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@next/eslint-plugin-next'" 1`] = `
[
  "@next/next/google-font-display",
  "@next/next/google-font-preconnect",
  "@next/next/inline-script-id",
  "@next/next/next-script-for-ga",
  "@next/next/no-assign-module-variable",
  "@next/next/no-async-client-component",
  "@next/next/no-before-interactive-script-outside-document",
  "@next/next/no-css-tags",
  "@next/next/no-document-import-in-page",
  "@next/next/no-duplicate-head",
  "@next/next/no-head-element",
  "@next/next/no-head-import-in-document",
  "@next/next/no-html-link-for-pages",
  "@next/next/no-img-element",
  "@next/next/no-page-custom-font",
  "@next/next/no-script-component-in-head",
  "@next/next/no-styled-jsx-in-document",
  "@next/next/no-sync-scripts",
  "@next/next/no-title-in-document-head",
  "@next/next/no-typos",
  "@next/next/no-unwanted-polyfillio",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@stylistic/eslint-plugin'" 1`] = `
[
  "@stylistic/array-bracket-newline",
  "@stylistic/array-bracket-spacing",
  "@stylistic/array-element-newline",
  "@stylistic/arrow-parens",
  "@stylistic/arrow-spacing",
  "@stylistic/block-spacing",
  "@stylistic/brace-style",
  "@stylistic/comma-dangle",
  "@stylistic/comma-spacing",
  "@stylistic/comma-style",
  "@stylistic/computed-property-spacing",
  "@stylistic/curly-newline",
  "@stylistic/dot-location",
  "@stylistic/eol-last",
  "@stylistic/func-call-spacing",
  "@stylistic/function-call-argument-newline",
  "@stylistic/function-call-spacing",
  "@stylistic/function-paren-newline",
  "@stylistic/generator-star-spacing",
  "@stylistic/implicit-arrow-linebreak",
  "@stylistic/indent",
  "@stylistic/indent-binary-ops",
  "@stylistic/jsx-child-element-spacing",
  "@stylistic/jsx-closing-bracket-location",
  "@stylistic/jsx-closing-tag-location",
  "@stylistic/jsx-curly-brace-presence",
  "@stylistic/jsx-curly-newline",
  "@stylistic/jsx-curly-spacing",
  "@stylistic/jsx-equals-spacing",
  "@stylistic/jsx-first-prop-new-line",
  "@stylistic/jsx-function-call-newline",
  "@stylistic/jsx-indent",
  "@stylistic/jsx-indent-props",
  "@stylistic/jsx-max-props-per-line",
  "@stylistic/jsx-newline",
  "@stylistic/jsx-one-expression-per-line",
  "@stylistic/jsx-pascal-case",
  "@stylistic/jsx-props-no-multi-spaces",
  "@stylistic/jsx-quotes",
  "@stylistic/jsx-self-closing-comp",
  "@stylistic/jsx-sort-props",
  "@stylistic/jsx-tag-spacing",
  "@stylistic/jsx-wrap-multilines",
  "@stylistic/key-spacing",
  "@stylistic/keyword-spacing",
  "@stylistic/line-comment-position",
  "@stylistic/linebreak-style",
  "@stylistic/lines-around-comment",
  "@stylistic/lines-between-class-members",
  "@stylistic/max-len",
  "@stylistic/max-statements-per-line",
  "@stylistic/member-delimiter-style",
  "@stylistic/multiline-comment-style",
  "@stylistic/multiline-ternary",
  "@stylistic/new-parens",
  "@stylistic/newline-per-chained-call",
  "@stylistic/no-confusing-arrow",
  "@stylistic/no-extra-parens",
  "@stylistic/no-extra-semi",
  "@stylistic/no-floating-decimal",
  "@stylistic/no-mixed-operators",
  "@stylistic/no-mixed-spaces-and-tabs",
  "@stylistic/no-multi-spaces",
  "@stylistic/no-multiple-empty-lines",
  "@stylistic/no-tabs",
  "@stylistic/no-trailing-spaces",
  "@stylistic/no-whitespace-before-property",
  "@stylistic/nonblock-statement-body-position",
  "@stylistic/object-curly-newline",
  "@stylistic/object-curly-spacing",
  "@stylistic/object-property-newline",
  "@stylistic/one-var-declaration-per-line",
  "@stylistic/operator-linebreak",
  "@stylistic/padded-blocks",
  "@stylistic/padding-line-between-statements",
  "@stylistic/quote-props",
  "@stylistic/quotes",
  "@stylistic/rest-spread-spacing",
  "@stylistic/semi",
  "@stylistic/semi-spacing",
  "@stylistic/semi-style",
  "@stylistic/space-before-blocks",
  "@stylistic/space-before-function-paren",
  "@stylistic/space-in-parens",
  "@stylistic/space-infix-ops",
  "@stylistic/space-unary-ops",
  "@stylistic/spaced-comment",
  "@stylistic/switch-colon-spacing",
  "@stylistic/template-curly-spacing",
  "@stylistic/template-tag-spacing",
  "@stylistic/type-annotation-spacing",
  "@stylistic/type-generic-spacing",
  "@stylistic/type-named-tuple-spacing",
  "@stylistic/wrap-iife",
  "@stylistic/wrap-regex",
  "@stylistic/yield-star-spacing",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@tanstack/eslint-plugin-query'" 1`] = `
[
  "@tanstack/query/exhaustive-deps",
  "@tanstack/query/infinite-query-property-order",
  "@tanstack/query/no-rest-destructuring",
  "@tanstack/query/no-unstable-deps",
  "@tanstack/query/no-void-query-fn",
  "@tanstack/query/stable-query-client",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'@vitest/eslint-plugin'" 1`] = `
[
  "vitest/consistent-test-filename",
  "vitest/consistent-test-it",
  "vitest/expect-expect",
  "vitest/max-expects",
  "vitest/max-nested-describe",
  "vitest/no-alias-methods",
  "vitest/no-commented-out-tests",
  "vitest/no-conditional-expect",
  "vitest/no-conditional-in-test",
  "vitest/no-conditional-tests",
  "vitest/no-disabled-tests",
  "vitest/no-done-callback",
  "vitest/no-duplicate-hooks",
  "vitest/no-focused-tests",
  "vitest/no-hooks",
  "vitest/no-identical-title",
  "vitest/no-import-node-test",
  "vitest/no-interpolation-in-snapshots",
  "vitest/no-large-snapshots",
  "vitest/no-mocks-import",
  "vitest/no-restricted-matchers",
  "vitest/no-restricted-vi-methods",
  "vitest/no-standalone-expect",
  "vitest/no-test-prefixes",
  "vitest/no-test-return-statement",
  "vitest/padding-around-after-all-blocks",
  "vitest/padding-around-after-each-blocks",
  "vitest/padding-around-all",
  "vitest/padding-around-before-all-blocks",
  "vitest/padding-around-before-each-blocks",
  "vitest/padding-around-describe-blocks",
  "vitest/padding-around-expect-groups",
  "vitest/padding-around-test-blocks",
  "vitest/prefer-called-with",
  "vitest/prefer-comparison-matcher",
  "vitest/prefer-describe-function-title",
  "vitest/prefer-each",
  "vitest/prefer-equality-matcher",
  "vitest/prefer-expect-assertions",
  "vitest/prefer-expect-resolves",
  "vitest/prefer-hooks-in-order",
  "vitest/prefer-hooks-on-top",
  "vitest/prefer-lowercase-title",
  "vitest/prefer-mock-promise-shorthand",
  "vitest/prefer-snapshot-hint",
  "vitest/prefer-spy-on",
  "vitest/prefer-strict-boolean-matchers",
  "vitest/prefer-strict-equal",
  "vitest/prefer-to-be",
  "vitest/prefer-to-be-falsy",
  "vitest/prefer-to-be-object",
  "vitest/prefer-to-be-truthy",
  "vitest/prefer-to-contain",
  "vitest/prefer-to-have-length",
  "vitest/prefer-todo",
  "vitest/prefer-vi-mocked",
  "vitest/require-hook",
  "vitest/require-local-test-context-for-concurrent-snapshots",
  "vitest/require-mock-type-parameters",
  "vitest/require-to-throw-message",
  "vitest/require-top-level-describe",
  "vitest/valid-describe-callback",
  "vitest/valid-expect",
  "vitest/valid-expect-in-promise",
  "vitest/valid-title",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint'" 1`] = `
[
  "accessor-pairs",
  "array-bracket-newline",
  "array-bracket-spacing",
  "array-callback-return",
  "array-element-newline",
  "arrow-body-style",
  "arrow-parens",
  "arrow-spacing",
  "block-scoped-var",
  "block-spacing",
  "brace-style",
  "callback-return",
  "camelcase",
  "capitalized-comments",
  "class-methods-use-this",
  "comma-dangle",
  "comma-spacing",
  "comma-style",
  "complexity",
  "computed-property-spacing",
  "consistent-return",
  "consistent-this",
  "constructor-super",
  "curly",
  "default-case",
  "default-case-last",
  "default-param-last",
  "dot-location",
  "dot-notation",
  "eol-last",
  "eqeqeq",
  "for-direction",
  "func-call-spacing",
  "func-name-matching",
  "func-names",
  "func-style",
  "function-call-argument-newline",
  "function-paren-newline",
  "generator-star-spacing",
  "getter-return",
  "global-require",
  "grouped-accessor-pairs",
  "guard-for-in",
  "handle-callback-err",
  "id-blacklist",
  "id-denylist",
  "id-length",
  "id-match",
  "implicit-arrow-linebreak",
  "indent",
  "indent-legacy",
  "init-declarations",
  "jsx-quotes",
  "key-spacing",
  "keyword-spacing",
  "line-comment-position",
  "linebreak-style",
  "lines-around-comment",
  "lines-around-directive",
  "lines-between-class-members",
  "logical-assignment-operators",
  "max-classes-per-file",
  "max-depth",
  "max-len",
  "max-lines",
  "max-lines-per-function",
  "max-nested-callbacks",
  "max-params",
  "max-statements",
  "max-statements-per-line",
  "multiline-comment-style",
  "multiline-ternary",
  "new-cap",
  "new-parens",
  "newline-after-var",
  "newline-before-return",
  "newline-per-chained-call",
  "no-alert",
  "no-array-constructor",
  "no-async-promise-executor",
  "no-await-in-loop",
  "no-bitwise",
  "no-buffer-constructor",
  "no-caller",
  "no-case-declarations",
  "no-catch-shadow",
  "no-class-assign",
  "no-compare-neg-zero",
  "no-cond-assign",
  "no-confusing-arrow",
  "no-console",
  "no-const-assign",
  "no-constant-binary-expression",
  "no-constant-condition",
  "no-constructor-return",
  "no-continue",
  "no-control-regex",
  "no-debugger",
  "no-delete-var",
  "no-div-regex",
  "no-dupe-args",
  "no-dupe-class-members",
  "no-dupe-else-if",
  "no-dupe-keys",
  "no-duplicate-case",
  "no-duplicate-imports",
  "no-else-return",
  "no-empty",
  "no-empty-character-class",
  "no-empty-function",
  "no-empty-pattern",
  "no-empty-static-block",
  "no-eq-null",
  "no-eval",
  "no-ex-assign",
  "no-extend-native",
  "no-extra-bind",
  "no-extra-boolean-cast",
  "no-extra-label",
  "no-extra-parens",
  "no-extra-semi",
  "no-fallthrough",
  "no-floating-decimal",
  "no-func-assign",
  "no-global-assign",
  "no-implicit-coercion",
  "no-implicit-globals",
  "no-implied-eval",
  "no-import-assign",
  "no-inline-comments",
  "no-inner-declarations",
  "no-invalid-regexp",
  "no-invalid-this",
  "no-irregular-whitespace",
  "no-iterator",
  "no-label-var",
  "no-labels",
  "no-lone-blocks",
  "no-lonely-if",
  "no-loop-func",
  "no-loss-of-precision",
  "no-magic-numbers",
  "no-misleading-character-class",
  "no-mixed-operators",
  "no-mixed-requires",
  "no-mixed-spaces-and-tabs",
  "no-multi-assign",
  "no-multi-spaces",
  "no-multi-str",
  "no-multiple-empty-lines",
  "no-native-reassign",
  "no-negated-condition",
  "no-negated-in-lhs",
  "no-nested-ternary",
  "no-new",
  "no-new-func",
  "no-new-native-nonconstructor",
  "no-new-object",
  "no-new-require",
  "no-new-symbol",
  "no-new-wrappers",
  "no-nonoctal-decimal-escape",
  "no-obj-calls",
  "no-object-constructor",
  "no-octal",
  "no-octal-escape",
  "no-param-reassign",
  "no-path-concat",
  "no-plusplus",
  "no-process-env",
  "no-process-exit",
  "no-promise-executor-return",
  "no-proto",
  "no-prototype-builtins",
  "no-redeclare",
  "no-regex-spaces",
  "no-restricted-exports",
  "no-restricted-globals",
  "no-restricted-imports",
  "no-restricted-modules",
  "no-restricted-properties",
  "no-restricted-syntax",
  "no-return-assign",
  "no-return-await",
  "no-script-url",
  "no-self-assign",
  "no-self-compare",
  "no-sequences",
  "no-setter-return",
  "no-shadow",
  "no-shadow-restricted-names",
  "no-spaced-func",
  "no-sparse-arrays",
  "no-sync",
  "no-tabs",
  "no-template-curly-in-string",
  "no-ternary",
  "no-this-before-super",
  "no-throw-literal",
  "no-trailing-spaces",
  "no-undef",
  "no-undef-init",
  "no-undefined",
  "no-underscore-dangle",
  "no-unexpected-multiline",
  "no-unmodified-loop-condition",
  "no-unneeded-ternary",
  "no-unreachable",
  "no-unreachable-loop",
  "no-unsafe-finally",
  "no-unsafe-negation",
  "no-unsafe-optional-chaining",
  "no-unused-expressions",
  "no-unused-labels",
  "no-unused-private-class-members",
  "no-unused-vars",
  "no-use-before-define",
  "no-useless-assignment",
  "no-useless-backreference",
  "no-useless-call",
  "no-useless-catch",
  "no-useless-computed-key",
  "no-useless-concat",
  "no-useless-constructor",
  "no-useless-escape",
  "no-useless-rename",
  "no-useless-return",
  "no-var",
  "no-void",
  "no-warning-comments",
  "no-whitespace-before-property",
  "no-with",
  "nonblock-statement-body-position",
  "object-curly-newline",
  "object-curly-spacing",
  "object-property-newline",
  "object-shorthand",
  "one-var",
  "one-var-declaration-per-line",
  "operator-assignment",
  "operator-linebreak",
  "padded-blocks",
  "padding-line-between-statements",
  "prefer-arrow-callback",
  "prefer-const",
  "prefer-destructuring",
  "prefer-exponentiation-operator",
  "prefer-named-capture-group",
  "prefer-numeric-literals",
  "prefer-object-has-own",
  "prefer-object-spread",
  "prefer-promise-reject-errors",
  "prefer-reflect",
  "prefer-regex-literals",
  "prefer-rest-params",
  "prefer-spread",
  "prefer-template",
  "quote-props",
  "quotes",
  "radix",
  "require-atomic-updates",
  "require-await",
  "require-unicode-regexp",
  "require-yield",
  "rest-spread-spacing",
  "semi",
  "semi-spacing",
  "semi-style",
  "sort-imports",
  "sort-keys",
  "sort-vars",
  "space-before-blocks",
  "space-before-function-paren",
  "space-in-parens",
  "space-infix-ops",
  "space-unary-ops",
  "spaced-comment",
  "strict",
  "switch-colon-spacing",
  "symbol-description",
  "template-curly-spacing",
  "template-tag-spacing",
  "unicode-bom",
  "use-isnan",
  "valid-typeof",
  "vars-on-top",
  "wrap-iife",
  "wrap-regex",
  "yield-star-spacing",
  "yoda",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-config-prettier'" 1`] = `
[
  "@babel/object-curly-spacing",
  "@babel/semi",
  "@stylistic/array-bracket-newline",
  "@stylistic/array-bracket-spacing",
  "@stylistic/array-element-newline",
  "@stylistic/arrow-parens",
  "@stylistic/arrow-spacing",
  "@stylistic/block-spacing",
  "@stylistic/brace-style",
  "@stylistic/comma-dangle",
  "@stylistic/comma-spacing",
  "@stylistic/comma-style",
  "@stylistic/computed-property-spacing",
  "@stylistic/dot-location",
  "@stylistic/eol-last",
  "@stylistic/func-call-spacing",
  "@stylistic/function-call-argument-newline",
  "@stylistic/function-call-spacing",
  "@stylistic/function-paren-newline",
  "@stylistic/generator-star-spacing",
  "@stylistic/implicit-arrow-linebreak",
  "@stylistic/indent",
  "@stylistic/indent-binary-ops",
  "@stylistic/js/array-bracket-newline",
  "@stylistic/js/array-bracket-spacing",
  "@stylistic/js/array-element-newline",
  "@stylistic/js/arrow-parens",
  "@stylistic/js/arrow-spacing",
  "@stylistic/js/block-spacing",
  "@stylistic/js/brace-style",
  "@stylistic/js/comma-dangle",
  "@stylistic/js/comma-spacing",
  "@stylistic/js/comma-style",
  "@stylistic/js/computed-property-spacing",
  "@stylistic/js/dot-location",
  "@stylistic/js/eol-last",
  "@stylistic/js/func-call-spacing",
  "@stylistic/js/function-call-argument-newline",
  "@stylistic/js/function-call-spacing",
  "@stylistic/js/function-paren-newline",
  "@stylistic/js/generator-star-spacing",
  "@stylistic/js/implicit-arrow-linebreak",
  "@stylistic/js/indent",
  "@stylistic/js/jsx-quotes",
  "@stylistic/js/key-spacing",
  "@stylistic/js/keyword-spacing",
  "@stylistic/js/linebreak-style",
  "@stylistic/js/lines-around-comment",
  "@stylistic/js/max-len",
  "@stylistic/js/max-statements-per-line",
  "@stylistic/js/multiline-ternary",
  "@stylistic/js/new-parens",
  "@stylistic/js/newline-per-chained-call",
  "@stylistic/js/no-confusing-arrow",
  "@stylistic/js/no-extra-parens",
  "@stylistic/js/no-extra-semi",
  "@stylistic/js/no-floating-decimal",
  "@stylistic/js/no-mixed-operators",
  "@stylistic/js/no-mixed-spaces-and-tabs",
  "@stylistic/js/no-multi-spaces",
  "@stylistic/js/no-multiple-empty-lines",
  "@stylistic/js/no-tabs",
  "@stylistic/js/no-trailing-spaces",
  "@stylistic/js/no-whitespace-before-property",
  "@stylistic/js/nonblock-statement-body-position",
  "@stylistic/js/object-curly-newline",
  "@stylistic/js/object-curly-spacing",
  "@stylistic/js/object-property-newline",
  "@stylistic/js/one-var-declaration-per-line",
  "@stylistic/js/operator-linebreak",
  "@stylistic/js/padded-blocks",
  "@stylistic/js/quote-props",
  "@stylistic/js/quotes",
  "@stylistic/js/rest-spread-spacing",
  "@stylistic/js/semi",
  "@stylistic/js/semi-spacing",
  "@stylistic/js/semi-style",
  "@stylistic/js/space-before-blocks",
  "@stylistic/js/space-before-function-paren",
  "@stylistic/js/space-in-parens",
  "@stylistic/js/space-infix-ops",
  "@stylistic/js/space-unary-ops",
  "@stylistic/js/switch-colon-spacing",
  "@stylistic/js/template-curly-spacing",
  "@stylistic/js/template-tag-spacing",
  "@stylistic/js/wrap-iife",
  "@stylistic/js/wrap-regex",
  "@stylistic/js/yield-star-spacing",
  "@stylistic/jsx-child-element-spacing",
  "@stylistic/jsx-closing-bracket-location",
  "@stylistic/jsx-closing-tag-location",
  "@stylistic/jsx-curly-newline",
  "@stylistic/jsx-curly-spacing",
  "@stylistic/jsx-equals-spacing",
  "@stylistic/jsx-first-prop-new-line",
  "@stylistic/jsx-indent",
  "@stylistic/jsx-indent-props",
  "@stylistic/jsx-max-props-per-line",
  "@stylistic/jsx-newline",
  "@stylistic/jsx-one-expression-per-line",
  "@stylistic/jsx-props-no-multi-spaces",
  "@stylistic/jsx-quotes",
  "@stylistic/jsx-tag-spacing",
  "@stylistic/jsx-wrap-multilines",
  "@stylistic/jsx/jsx-child-element-spacing",
  "@stylistic/jsx/jsx-closing-bracket-location",
  "@stylistic/jsx/jsx-closing-tag-location",
  "@stylistic/jsx/jsx-curly-newline",
  "@stylistic/jsx/jsx-curly-spacing",
  "@stylistic/jsx/jsx-equals-spacing",
  "@stylistic/jsx/jsx-first-prop-new-line",
  "@stylistic/jsx/jsx-indent",
  "@stylistic/jsx/jsx-indent-props",
  "@stylistic/jsx/jsx-max-props-per-line",
  "@stylistic/key-spacing",
  "@stylistic/keyword-spacing",
  "@stylistic/linebreak-style",
  "@stylistic/lines-around-comment",
  "@stylistic/max-len",
  "@stylistic/max-statements-per-line",
  "@stylistic/member-delimiter-style",
  "@stylistic/multiline-ternary",
  "@stylistic/new-parens",
  "@stylistic/newline-per-chained-call",
  "@stylistic/no-confusing-arrow",
  "@stylistic/no-extra-parens",
  "@stylistic/no-extra-semi",
  "@stylistic/no-floating-decimal",
  "@stylistic/no-mixed-operators",
  "@stylistic/no-mixed-spaces-and-tabs",
  "@stylistic/no-multi-spaces",
  "@stylistic/no-multiple-empty-lines",
  "@stylistic/no-tabs",
  "@stylistic/no-trailing-spaces",
  "@stylistic/no-whitespace-before-property",
  "@stylistic/nonblock-statement-body-position",
  "@stylistic/object-curly-newline",
  "@stylistic/object-curly-spacing",
  "@stylistic/object-property-newline",
  "@stylistic/one-var-declaration-per-line",
  "@stylistic/operator-linebreak",
  "@stylistic/padded-blocks",
  "@stylistic/quote-props",
  "@stylistic/quotes",
  "@stylistic/rest-spread-spacing",
  "@stylistic/semi",
  "@stylistic/semi-spacing",
  "@stylistic/semi-style",
  "@stylistic/space-before-blocks",
  "@stylistic/space-before-function-paren",
  "@stylistic/space-in-parens",
  "@stylistic/space-infix-ops",
  "@stylistic/space-unary-ops",
  "@stylistic/switch-colon-spacing",
  "@stylistic/template-curly-spacing",
  "@stylistic/template-tag-spacing",
  "@stylistic/ts/block-spacing",
  "@stylistic/ts/brace-style",
  "@stylistic/ts/comma-dangle",
  "@stylistic/ts/comma-spacing",
  "@stylistic/ts/func-call-spacing",
  "@stylistic/ts/function-call-spacing",
  "@stylistic/ts/indent",
  "@stylistic/ts/key-spacing",
  "@stylistic/ts/keyword-spacing",
  "@stylistic/ts/lines-around-comment",
  "@stylistic/ts/member-delimiter-style",
  "@stylistic/ts/no-extra-parens",
  "@stylistic/ts/no-extra-semi",
  "@stylistic/ts/object-curly-spacing",
  "@stylistic/ts/quotes",
  "@stylistic/ts/semi",
  "@stylistic/ts/space-before-blocks",
  "@stylistic/ts/space-before-function-paren",
  "@stylistic/ts/space-infix-ops",
  "@stylistic/ts/type-annotation-spacing",
  "@stylistic/type-annotation-spacing",
  "@stylistic/type-generic-spacing",
  "@stylistic/type-named-tuple-spacing",
  "@stylistic/wrap-iife",
  "@stylistic/wrap-regex",
  "@stylistic/yield-star-spacing",
  "@typescript-eslint/block-spacing",
  "@typescript-eslint/brace-style",
  "@typescript-eslint/comma-dangle",
  "@typescript-eslint/comma-spacing",
  "@typescript-eslint/func-call-spacing",
  "@typescript-eslint/indent",
  "@typescript-eslint/key-spacing",
  "@typescript-eslint/keyword-spacing",
  "@typescript-eslint/lines-around-comment",
  "@typescript-eslint/member-delimiter-style",
  "@typescript-eslint/no-extra-parens",
  "@typescript-eslint/no-extra-semi",
  "@typescript-eslint/object-curly-spacing",
  "@typescript-eslint/quotes",
  "@typescript-eslint/semi",
  "@typescript-eslint/space-before-blocks",
  "@typescript-eslint/space-before-function-paren",
  "@typescript-eslint/space-infix-ops",
  "@typescript-eslint/type-annotation-spacing",
  "array-bracket-newline",
  "array-bracket-spacing",
  "array-element-newline",
  "arrow-parens",
  "arrow-spacing",
  "babel/object-curly-spacing",
  "babel/quotes",
  "babel/semi",
  "block-spacing",
  "brace-style",
  "comma-dangle",
  "comma-spacing",
  "comma-style",
  "computed-property-spacing",
  "curly",
  "dot-location",
  "eol-last",
  "flowtype/boolean-style",
  "flowtype/delimiter-dangle",
  "flowtype/generic-spacing",
  "flowtype/object-type-curly-spacing",
  "flowtype/object-type-delimiter",
  "flowtype/quotes",
  "flowtype/semi",
  "flowtype/space-after-type-colon",
  "flowtype/space-before-generic-bracket",
  "flowtype/space-before-type-colon",
  "flowtype/union-intersection-spacing",
  "func-call-spacing",
  "function-call-argument-newline",
  "function-paren-newline",
  "generator-star",
  "generator-star-spacing",
  "implicit-arrow-linebreak",
  "indent",
  "indent-legacy",
  "jsx-quotes",
  "key-spacing",
  "keyword-spacing",
  "linebreak-style",
  "lines-around-comment",
  "max-len",
  "max-statements-per-line",
  "multiline-ternary",
  "new-parens",
  "newline-per-chained-call",
  "no-arrow-condition",
  "no-comma-dangle",
  "no-confusing-arrow",
  "no-extra-parens",
  "no-extra-semi",
  "no-floating-decimal",
  "no-mixed-operators",
  "no-mixed-spaces-and-tabs",
  "no-multi-spaces",
  "no-multiple-empty-lines",
  "no-reserved-keys",
  "no-space-before-semi",
  "no-spaced-func",
  "no-tabs",
  "no-trailing-spaces",
  "no-unexpected-multiline",
  "no-whitespace-before-property",
  "no-wrap-func",
  "nonblock-statement-body-position",
  "object-curly-newline",
  "object-curly-spacing",
  "object-property-newline",
  "one-var-declaration-per-line",
  "operator-linebreak",
  "padded-blocks",
  "quote-props",
  "quotes",
  "react/jsx-child-element-spacing",
  "react/jsx-closing-bracket-location",
  "react/jsx-closing-tag-location",
  "react/jsx-curly-newline",
  "react/jsx-curly-spacing",
  "react/jsx-equals-spacing",
  "react/jsx-first-prop-new-line",
  "react/jsx-indent",
  "react/jsx-indent-props",
  "react/jsx-max-props-per-line",
  "react/jsx-newline",
  "react/jsx-one-expression-per-line",
  "react/jsx-props-no-multi-spaces",
  "react/jsx-space-before-closing",
  "react/jsx-tag-spacing",
  "react/jsx-wrap-multilines",
  "rest-spread-spacing",
  "semi",
  "semi-spacing",
  "semi-style",
  "space-after-function-name",
  "space-after-keywords",
  "space-before-blocks",
  "space-before-function-paren",
  "space-before-function-parentheses",
  "space-before-keywords",
  "space-in-brackets",
  "space-in-parens",
  "space-infix-ops",
  "space-return-throw-case",
  "space-unary-ops",
  "space-unary-word-ops",
  "standard/array-bracket-even-spacing",
  "standard/computed-property-even-spacing",
  "standard/object-curly-even-spacing",
  "switch-colon-spacing",
  "template-curly-spacing",
  "template-tag-spacing",
  "unicorn/empty-brace-spaces",
  "unicorn/no-nested-ternary",
  "unicorn/number-literal-case",
  "unicorn/template-indent",
  "vue/array-bracket-newline",
  "vue/array-bracket-spacing",
  "vue/array-element-newline",
  "vue/arrow-spacing",
  "vue/block-spacing",
  "vue/block-tag-newline",
  "vue/brace-style",
  "vue/comma-dangle",
  "vue/comma-spacing",
  "vue/comma-style",
  "vue/dot-location",
  "vue/func-call-spacing",
  "vue/html-closing-bracket-newline",
  "vue/html-closing-bracket-spacing",
  "vue/html-end-tags",
  "vue/html-indent",
  "vue/html-quotes",
  "vue/html-self-closing",
  "vue/key-spacing",
  "vue/keyword-spacing",
  "vue/max-attributes-per-line",
  "vue/max-len",
  "vue/multiline-html-element-content-newline",
  "vue/multiline-ternary",
  "vue/mustache-interpolation-spacing",
  "vue/no-extra-parens",
  "vue/no-multi-spaces",
  "vue/no-spaces-around-equal-signs-in-attribute",
  "vue/object-curly-newline",
  "vue/object-curly-spacing",
  "vue/object-property-newline",
  "vue/operator-linebreak",
  "vue/quote-props",
  "vue/script-indent",
  "vue/singleline-html-element-content-newline",
  "vue/space-in-parens",
  "vue/space-infix-ops",
  "vue/space-unary-ops",
  "vue/template-curly-spacing",
  "wrap-iife",
  "wrap-regex",
  "yield-star-spacing",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-chai-friendly'" 1`] = `
[
  "chai-friendly/no-unused-expressions",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-cypress'" 1`] = `
[
  "cypress/assertion-before-screenshot",
  "cypress/no-assigning-return-values",
  "cypress/no-async-before",
  "cypress/no-async-tests",
  "cypress/no-chained-get",
  "cypress/no-debug",
  "cypress/no-force",
  "cypress/no-pause",
  "cypress/no-unnecessary-waiting",
  "cypress/no-xpath",
  "cypress/require-data-selectors",
  "cypress/unsafe-to-chain-command",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-i18n-json'" 1`] = `
[
  "i18n-json/identical-keys",
  "i18n-json/identical-placeholders",
  "i18n-json/sorted-keys",
  "i18n-json/valid-json",
  "i18n-json/valid-message-syntax",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-i18next'" 1`] = `
[
  "i18next/no-literal-string",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-import'" 1`] = `
[
  "import/consistent-type-specifier-style",
  "import/default",
  "import/dynamic-import-chunkname",
  "import/export",
  "import/exports-last",
  "import/extensions",
  "import/first",
  "import/group-exports",
  "import/imports-first",
  "import/max-dependencies",
  "import/named",
  "import/namespace",
  "import/newline-after-import",
  "import/no-absolute-path",
  "import/no-amd",
  "import/no-anonymous-default-export",
  "import/no-commonjs",
  "import/no-cycle",
  "import/no-default-export",
  "import/no-deprecated",
  "import/no-duplicates",
  "import/no-dynamic-require",
  "import/no-empty-named-blocks",
  "import/no-extraneous-dependencies",
  "import/no-import-module-exports",
  "import/no-internal-modules",
  "import/no-mutable-exports",
  "import/no-named-as-default",
  "import/no-named-as-default-member",
  "import/no-named-default",
  "import/no-named-export",
  "import/no-namespace",
  "import/no-nodejs-modules",
  "import/no-relative-packages",
  "import/no-relative-parent-imports",
  "import/no-restricted-paths",
  "import/no-self-import",
  "import/no-unassigned-import",
  "import/no-unresolved",
  "import/no-unused-modules",
  "import/no-useless-path-segments",
  "import/no-webpack-loader-syntax",
  "import/order",
  "import/prefer-default-export",
  "import/unambiguous",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-jsdoc'" 1`] = `
[
  "jsdoc/check-access",
  "jsdoc/check-alignment",
  "jsdoc/check-examples",
  "jsdoc/check-indentation",
  "jsdoc/check-line-alignment",
  "jsdoc/check-param-names",
  "jsdoc/check-property-names",
  "jsdoc/check-syntax",
  "jsdoc/check-tag-names",
  "jsdoc/check-template-names",
  "jsdoc/check-types",
  "jsdoc/check-values",
  "jsdoc/convert-to-jsdoc-comments",
  "jsdoc/empty-tags",
  "jsdoc/implements-on-classes",
  "jsdoc/imports-as-dependencies",
  "jsdoc/informative-docs",
  "jsdoc/lines-before-block",
  "jsdoc/match-description",
  "jsdoc/match-name",
  "jsdoc/multiline-blocks",
  "jsdoc/no-bad-blocks",
  "jsdoc/no-blank-block-descriptions",
  "jsdoc/no-blank-blocks",
  "jsdoc/no-defaults",
  "jsdoc/no-missing-syntax",
  "jsdoc/no-multi-asterisks",
  "jsdoc/no-restricted-syntax",
  "jsdoc/no-types",
  "jsdoc/no-undefined-types",
  "jsdoc/require-asterisk-prefix",
  "jsdoc/require-description",
  "jsdoc/require-description-complete-sentence",
  "jsdoc/require-example",
  "jsdoc/require-file-overview",
  "jsdoc/require-hyphen-before-param-description",
  "jsdoc/require-jsdoc",
  "jsdoc/require-param",
  "jsdoc/require-param-description",
  "jsdoc/require-param-name",
  "jsdoc/require-param-type",
  "jsdoc/require-property",
  "jsdoc/require-property-description",
  "jsdoc/require-property-name",
  "jsdoc/require-property-type",
  "jsdoc/require-returns",
  "jsdoc/require-returns-check",
  "jsdoc/require-returns-description",
  "jsdoc/require-returns-type",
  "jsdoc/require-template",
  "jsdoc/require-throws",
  "jsdoc/require-yields",
  "jsdoc/require-yields-check",
  "jsdoc/sort-tags",
  "jsdoc/tag-lines",
  "jsdoc/text-escaping",
  "jsdoc/valid-types",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-jsx-a11y'" 1`] = `
[
  "jsx-a11y/accessible-emoji",
  "jsx-a11y/alt-text",
  "jsx-a11y/anchor-ambiguous-text",
  "jsx-a11y/anchor-has-content",
  "jsx-a11y/anchor-is-valid",
  "jsx-a11y/aria-activedescendant-has-tabindex",
  "jsx-a11y/aria-props",
  "jsx-a11y/aria-proptypes",
  "jsx-a11y/aria-role",
  "jsx-a11y/aria-unsupported-elements",
  "jsx-a11y/autocomplete-valid",
  "jsx-a11y/click-events-have-key-events",
  "jsx-a11y/control-has-associated-label",
  "jsx-a11y/heading-has-content",
  "jsx-a11y/html-has-lang",
  "jsx-a11y/iframe-has-title",
  "jsx-a11y/img-redundant-alt",
  "jsx-a11y/interactive-supports-focus",
  "jsx-a11y/label-has-associated-control",
  "jsx-a11y/label-has-for",
  "jsx-a11y/lang",
  "jsx-a11y/media-has-caption",
  "jsx-a11y/mouse-events-have-key-events",
  "jsx-a11y/no-access-key",
  "jsx-a11y/no-aria-hidden-on-focusable",
  "jsx-a11y/no-autofocus",
  "jsx-a11y/no-distracting-elements",
  "jsx-a11y/no-interactive-element-to-noninteractive-role",
  "jsx-a11y/no-noninteractive-element-interactions",
  "jsx-a11y/no-noninteractive-element-to-interactive-role",
  "jsx-a11y/no-noninteractive-tabindex",
  "jsx-a11y/no-onchange",
  "jsx-a11y/no-redundant-roles",
  "jsx-a11y/no-static-element-interactions",
  "jsx-a11y/prefer-tag-over-role",
  "jsx-a11y/role-has-required-aria-props",
  "jsx-a11y/role-supports-aria-props",
  "jsx-a11y/scope",
  "jsx-a11y/tabindex-no-positive",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-mdx'" 1`] = `
[
  "mdx/remark",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-mocha'" 1`] = `
[
  "mocha/consistent-interface",
  "mocha/consistent-spacing-between-blocks",
  "mocha/handle-done-callback",
  "mocha/max-top-level-suites",
  "mocha/no-async-suite",
  "mocha/no-empty-title",
  "mocha/no-exclusive-tests",
  "mocha/no-exports",
  "mocha/no-global-tests",
  "mocha/no-hooks",
  "mocha/no-hooks-for-single-case",
  "mocha/no-identical-title",
  "mocha/no-mocha-arrows",
  "mocha/no-nested-tests",
  "mocha/no-pending-tests",
  "mocha/no-return-and-callback",
  "mocha/no-return-from-async",
  "mocha/no-setup-in-describe",
  "mocha/no-sibling-hooks",
  "mocha/no-synchronous-tests",
  "mocha/no-top-level-hooks",
  "mocha/prefer-arrow-callback",
  "mocha/valid-suite-title",
  "mocha/valid-test-title",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-playwright'" 1`] = `
[
  "playwright/expect-expect",
  "playwright/max-expects",
  "playwright/max-nested-describe",
  "playwright/missing-playwright-await",
  "playwright/no-commented-out-tests",
  "playwright/no-conditional-expect",
  "playwright/no-conditional-in-test",
  "playwright/no-duplicate-hooks",
  "playwright/no-element-handle",
  "playwright/no-eval",
  "playwright/no-focused-test",
  "playwright/no-force-option",
  "playwright/no-get-by-title",
  "playwright/no-hooks",
  "playwright/no-nested-step",
  "playwright/no-networkidle",
  "playwright/no-nth-methods",
  "playwright/no-page-pause",
  "playwright/no-raw-locators",
  "playwright/no-restricted-matchers",
  "playwright/no-skipped-test",
  "playwright/no-slowed-test",
  "playwright/no-standalone-expect",
  "playwright/no-unsafe-references",
  "playwright/no-useless-await",
  "playwright/no-useless-not",
  "playwright/no-wait-for-selector",
  "playwright/no-wait-for-timeout",
  "playwright/prefer-comparison-matcher",
  "playwright/prefer-equality-matcher",
  "playwright/prefer-hooks-in-order",
  "playwright/prefer-hooks-on-top",
  "playwright/prefer-locator",
  "playwright/prefer-lowercase-title",
  "playwright/prefer-native-locators",
  "playwright/prefer-strict-equal",
  "playwright/prefer-to-be",
  "playwright/prefer-to-contain",
  "playwright/prefer-to-have-count",
  "playwright/prefer-to-have-length",
  "playwright/prefer-web-first-assertions",
  "playwright/require-hook",
  "playwright/require-soft-assertions",
  "playwright/require-to-throw-message",
  "playwright/require-top-level-describe",
  "playwright/valid-describe-callback",
  "playwright/valid-expect",
  "playwright/valid-expect-in-promise",
  "playwright/valid-title",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-promise'" 1`] = `
[
  "promise/always-return",
  "promise/avoid-new",
  "promise/catch-or-return",
  "promise/no-callback-in-promise",
  "promise/no-multiple-resolved",
  "promise/no-native",
  "promise/no-nesting",
  "promise/no-new-statics",
  "promise/no-promise-in-callback",
  "promise/no-return-in-finally",
  "promise/no-return-wrap",
  "promise/param-names",
  "promise/prefer-await-to-callbacks",
  "promise/prefer-await-to-then",
  "promise/prefer-catch",
  "promise/spec-only",
  "promise/valid-params",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-react'" 1`] = `
[
  "react/boolean-prop-naming",
  "react/button-has-type",
  "react/checked-requires-onchange-or-readonly",
  "react/default-props-match-prop-types",
  "react/destructuring-assignment",
  "react/display-name",
  "react/forbid-component-props",
  "react/forbid-dom-props",
  "react/forbid-elements",
  "react/forbid-foreign-prop-types",
  "react/forbid-prop-types",
  "react/forward-ref-uses-ref",
  "react/function-component-definition",
  "react/hook-use-state",
  "react/iframe-missing-sandbox",
  "react/jsx-boolean-value",
  "react/jsx-child-element-spacing",
  "react/jsx-closing-bracket-location",
  "react/jsx-closing-tag-location",
  "react/jsx-curly-brace-presence",
  "react/jsx-curly-newline",
  "react/jsx-curly-spacing",
  "react/jsx-equals-spacing",
  "react/jsx-filename-extension",
  "react/jsx-first-prop-new-line",
  "react/jsx-fragments",
  "react/jsx-handler-names",
  "react/jsx-indent",
  "react/jsx-indent-props",
  "react/jsx-key",
  "react/jsx-max-depth",
  "react/jsx-max-props-per-line",
  "react/jsx-newline",
  "react/jsx-no-bind",
  "react/jsx-no-comment-textnodes",
  "react/jsx-no-constructed-context-values",
  "react/jsx-no-duplicate-props",
  "react/jsx-no-leaked-render",
  "react/jsx-no-literals",
  "react/jsx-no-script-url",
  "react/jsx-no-target-blank",
  "react/jsx-no-undef",
  "react/jsx-no-useless-fragment",
  "react/jsx-one-expression-per-line",
  "react/jsx-pascal-case",
  "react/jsx-props-no-multi-spaces",
  "react/jsx-props-no-spread-multi",
  "react/jsx-props-no-spreading",
  "react/jsx-sort-default-props",
  "react/jsx-sort-props",
  "react/jsx-space-before-closing",
  "react/jsx-tag-spacing",
  "react/jsx-uses-react",
  "react/jsx-uses-vars",
  "react/jsx-wrap-multilines",
  "react/no-access-state-in-setstate",
  "react/no-adjacent-inline-elements",
  "react/no-array-index-key",
  "react/no-arrow-function-lifecycle",
  "react/no-children-prop",
  "react/no-danger",
  "react/no-danger-with-children",
  "react/no-deprecated",
  "react/no-did-mount-set-state",
  "react/no-did-update-set-state",
  "react/no-direct-mutation-state",
  "react/no-find-dom-node",
  "react/no-invalid-html-attribute",
  "react/no-is-mounted",
  "react/no-multi-comp",
  "react/no-namespace",
  "react/no-object-type-as-default-prop",
  "react/no-redundant-should-component-update",
  "react/no-render-return-value",
  "react/no-set-state",
  "react/no-string-refs",
  "react/no-this-in-sfc",
  "react/no-typos",
  "react/no-unescaped-entities",
  "react/no-unknown-property",
  "react/no-unsafe",
  "react/no-unstable-nested-components",
  "react/no-unused-class-component-methods",
  "react/no-unused-prop-types",
  "react/no-unused-state",
  "react/no-will-update-set-state",
  "react/prefer-es6-class",
  "react/prefer-exact-props",
  "react/prefer-read-only-props",
  "react/prefer-stateless-function",
  "react/prop-types",
  "react/react-in-jsx-scope",
  "react/require-default-props",
  "react/require-optimization",
  "react/require-render-return",
  "react/self-closing-comp",
  "react/sort-comp",
  "react/sort-default-props",
  "react/sort-prop-types",
  "react/state-in-constructor",
  "react/static-property-placement",
  "react/style-prop-object",
  "react/void-dom-elements-no-children",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-react-hooks'" 1`] = `
[
  "react-hooks/exhaustive-deps",
  "react-hooks/rules-of-hooks",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-regexp'" 1`] = `
[
  "regexp/confusing-quantifier",
  "regexp/control-character-escape",
  "regexp/grapheme-string-literal",
  "regexp/hexadecimal-escape",
  "regexp/letter-case",
  "regexp/match-any",
  "regexp/negation",
  "regexp/no-contradiction-with-assertion",
  "regexp/no-control-character",
  "regexp/no-dupe-characters-character-class",
  "regexp/no-dupe-disjunctions",
  "regexp/no-empty-alternative",
  "regexp/no-empty-capturing-group",
  "regexp/no-empty-character-class",
  "regexp/no-empty-group",
  "regexp/no-empty-lookarounds-assertion",
  "regexp/no-empty-string-literal",
  "regexp/no-escape-backspace",
  "regexp/no-extra-lookaround-assertions",
  "regexp/no-invalid-regexp",
  "regexp/no-invisible-character",
  "regexp/no-lazy-ends",
  "regexp/no-legacy-features",
  "regexp/no-misleading-capturing-group",
  "regexp/no-misleading-unicode-character",
  "regexp/no-missing-g-flag",
  "regexp/no-non-standard-flag",
  "regexp/no-obscure-range",
  "regexp/no-octal",
  "regexp/no-optional-assertion",
  "regexp/no-potentially-useless-backreference",
  "regexp/no-standalone-backslash",
  "regexp/no-super-linear-backtracking",
  "regexp/no-super-linear-move",
  "regexp/no-trivially-nested-assertion",
  "regexp/no-trivially-nested-quantifier",
  "regexp/no-unused-capturing-group",
  "regexp/no-useless-assertions",
  "regexp/no-useless-backreference",
  "regexp/no-useless-character-class",
  "regexp/no-useless-dollar-replacements",
  "regexp/no-useless-escape",
  "regexp/no-useless-flag",
  "regexp/no-useless-lazy",
  "regexp/no-useless-non-capturing-group",
  "regexp/no-useless-quantifier",
  "regexp/no-useless-range",
  "regexp/no-useless-set-operand",
  "regexp/no-useless-string-literal",
  "regexp/no-useless-two-nums-quantifier",
  "regexp/no-zero-quantifier",
  "regexp/optimal-lookaround-quantifier",
  "regexp/optimal-quantifier-concatenation",
  "regexp/prefer-character-class",
  "regexp/prefer-d",
  "regexp/prefer-escape-replacement-dollar-char",
  "regexp/prefer-lookaround",
  "regexp/prefer-named-backreference",
  "regexp/prefer-named-capture-group",
  "regexp/prefer-named-replacement",
  "regexp/prefer-plus-quantifier",
  "regexp/prefer-predefined-assertion",
  "regexp/prefer-quantifier",
  "regexp/prefer-question-quantifier",
  "regexp/prefer-range",
  "regexp/prefer-regexp-exec",
  "regexp/prefer-regexp-test",
  "regexp/prefer-result-array-groups",
  "regexp/prefer-set-operation",
  "regexp/prefer-star-quantifier",
  "regexp/prefer-unicode-codepoint-escapes",
  "regexp/prefer-w",
  "regexp/require-unicode-regexp",
  "regexp/require-unicode-sets-regexp",
  "regexp/simplify-set-operations",
  "regexp/sort-alternatives",
  "regexp/sort-character-class-elements",
  "regexp/sort-flags",
  "regexp/strict",
  "regexp/unicode-escape",
  "regexp/unicode-property",
  "regexp/use-ignore-case",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-security'" 1`] = `
[
  "security/detect-bidi-characters",
  "security/detect-buffer-noassert",
  "security/detect-child-process",
  "security/detect-disable-mustache-escape",
  "security/detect-eval-with-expression",
  "security/detect-new-buffer",
  "security/detect-no-csrf-before-method-override",
  "security/detect-non-literal-fs-filename",
  "security/detect-non-literal-regexp",
  "security/detect-non-literal-require",
  "security/detect-object-injection",
  "security/detect-possible-timing-attacks",
  "security/detect-pseudoRandomBytes",
  "security/detect-unsafe-regex",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-storybook'" 1`] = `
[
  "storybook/await-interactions",
  "storybook/context-in-play-function",
  "storybook/csf-component",
  "storybook/default-exports",
  "storybook/hierarchy-separator",
  "storybook/meta-inline-properties",
  "storybook/meta-satisfies-type",
  "storybook/no-redundant-story-name",
  "storybook/no-stories-of",
  "storybook/no-title-property-in-meta",
  "storybook/no-uninstalled-addons",
  "storybook/prefer-pascal-case",
  "storybook/story-exports",
  "storybook/use-storybook-expect",
  "storybook/use-storybook-testing-library",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-tailwindcss'" 1`] = `
[
  "tailwindcss/classnames-order",
  "tailwindcss/enforces-negative-arbitrary-values",
  "tailwindcss/enforces-shorthand",
  "tailwindcss/migration-from-tailwind-2",
  "tailwindcss/no-arbitrary-value",
  "tailwindcss/no-contradicting-classname",
  "tailwindcss/no-custom-classname",
  "tailwindcss/no-unnecessary-arbitrary-value",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-testing-library'" 1`] = `
[
  "testing-library/await-async-events",
  "testing-library/await-async-queries",
  "testing-library/await-async-utils",
  "testing-library/consistent-data-testid",
  "testing-library/no-await-sync-events",
  "testing-library/no-await-sync-queries",
  "testing-library/no-container",
  "testing-library/no-debugging-utils",
  "testing-library/no-dom-import",
  "testing-library/no-global-regexp-flag-in-query",
  "testing-library/no-manual-cleanup",
  "testing-library/no-node-access",
  "testing-library/no-promise-in-fire-event",
  "testing-library/no-render-in-lifecycle",
  "testing-library/no-unnecessary-act",
  "testing-library/no-wait-for-multiple-assertions",
  "testing-library/no-wait-for-side-effects",
  "testing-library/no-wait-for-snapshot",
  "testing-library/prefer-explicit-assert",
  "testing-library/prefer-find-by",
  "testing-library/prefer-implicit-assert",
  "testing-library/prefer-presence-queries",
  "testing-library/prefer-query-by-disappearance",
  "testing-library/prefer-query-matchers",
  "testing-library/prefer-screen-queries",
  "testing-library/prefer-user-event",
  "testing-library/render-result-naming-convention",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-typescript-enum'" 1`] = `
[
  "typescript-enum/no-const-enum",
  "typescript-enum/no-enum",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-unicorn'" 1`] = `
[
  "unicorn/better-regex",
  "unicorn/catch-error-name",
  "unicorn/consistent-assert",
  "unicorn/consistent-date-clone",
  "unicorn/consistent-destructuring",
  "unicorn/consistent-empty-array-spread",
  "unicorn/consistent-existence-index-check",
  "unicorn/consistent-function-scoping",
  "unicorn/custom-error-definition",
  "unicorn/empty-brace-spaces",
  "unicorn/error-message",
  "unicorn/escape-case",
  "unicorn/expiring-todo-comments",
  "unicorn/explicit-length-check",
  "unicorn/filename-case",
  "unicorn/import-style",
  "unicorn/new-for-builtins",
  "unicorn/no-abusive-eslint-disable",
  "unicorn/no-accessor-recursion",
  "unicorn/no-anonymous-default-export",
  "unicorn/no-array-callback-reference",
  "unicorn/no-array-for-each",
  "unicorn/no-array-method-this-argument",
  "unicorn/no-array-push-push",
  "unicorn/no-array-reduce",
  "unicorn/no-await-expression-member",
  "unicorn/no-await-in-promise-methods",
  "unicorn/no-console-spaces",
  "unicorn/no-document-cookie",
  "unicorn/no-empty-file",
  "unicorn/no-for-loop",
  "unicorn/no-hex-escape",
  "unicorn/no-instanceof-array",
  "unicorn/no-instanceof-builtins",
  "unicorn/no-invalid-fetch-options",
  "unicorn/no-invalid-remove-event-listener",
  "unicorn/no-keyword-prefix",
  "unicorn/no-length-as-slice-end",
  "unicorn/no-lonely-if",
  "unicorn/no-magic-array-flat-depth",
  "unicorn/no-named-default",
  "unicorn/no-negated-condition",
  "unicorn/no-negation-in-equality-check",
  "unicorn/no-nested-ternary",
  "unicorn/no-new-array",
  "unicorn/no-new-buffer",
  "unicorn/no-null",
  "unicorn/no-object-as-default-parameter",
  "unicorn/no-process-exit",
  "unicorn/no-single-promise-in-promise-methods",
  "unicorn/no-static-only-class",
  "unicorn/no-thenable",
  "unicorn/no-this-assignment",
  "unicorn/no-typeof-undefined",
  "unicorn/no-unnecessary-array-flat-depth",
  "unicorn/no-unnecessary-array-splice-count",
  "unicorn/no-unnecessary-await",
  "unicorn/no-unnecessary-polyfills",
  "unicorn/no-unnecessary-slice-end",
  "unicorn/no-unreadable-array-destructuring",
  "unicorn/no-unreadable-iife",
  "unicorn/no-unused-properties",
  "unicorn/no-useless-fallback-in-spread",
  "unicorn/no-useless-length-check",
  "unicorn/no-useless-promise-resolve-reject",
  "unicorn/no-useless-spread",
  "unicorn/no-useless-switch-case",
  "unicorn/no-useless-undefined",
  "unicorn/no-zero-fractions",
  "unicorn/number-literal-case",
  "unicorn/numeric-separators-style",
  "unicorn/prefer-add-event-listener",
  "unicorn/prefer-array-find",
  "unicorn/prefer-array-flat",
  "unicorn/prefer-array-flat-map",
  "unicorn/prefer-array-index-of",
  "unicorn/prefer-array-some",
  "unicorn/prefer-at",
  "unicorn/prefer-blob-reading-methods",
  "unicorn/prefer-code-point",
  "unicorn/prefer-date-now",
  "unicorn/prefer-default-parameters",
  "unicorn/prefer-dom-node-append",
  "unicorn/prefer-dom-node-dataset",
  "unicorn/prefer-dom-node-remove",
  "unicorn/prefer-dom-node-text-content",
  "unicorn/prefer-event-target",
  "unicorn/prefer-export-from",
  "unicorn/prefer-global-this",
  "unicorn/prefer-import-meta-properties",
  "unicorn/prefer-includes",
  "unicorn/prefer-json-parse-buffer",
  "unicorn/prefer-keyboard-event-key",
  "unicorn/prefer-logical-operator-over-ternary",
  "unicorn/prefer-math-min-max",
  "unicorn/prefer-math-trunc",
  "unicorn/prefer-modern-dom-apis",
  "unicorn/prefer-modern-math-apis",
  "unicorn/prefer-module",
  "unicorn/prefer-native-coercion-functions",
  "unicorn/prefer-negative-index",
  "unicorn/prefer-node-protocol",
  "unicorn/prefer-number-properties",
  "unicorn/prefer-object-from-entries",
  "unicorn/prefer-optional-catch-binding",
  "unicorn/prefer-prototype-methods",
  "unicorn/prefer-query-selector",
  "unicorn/prefer-reflect-apply",
  "unicorn/prefer-regexp-test",
  "unicorn/prefer-set-has",
  "unicorn/prefer-set-size",
  "unicorn/prefer-single-call",
  "unicorn/prefer-spread",
  "unicorn/prefer-string-raw",
  "unicorn/prefer-string-replace-all",
  "unicorn/prefer-string-slice",
  "unicorn/prefer-string-starts-ends-with",
  "unicorn/prefer-string-trim-start-end",
  "unicorn/prefer-structured-clone",
  "unicorn/prefer-switch",
  "unicorn/prefer-ternary",
  "unicorn/prefer-top-level-await",
  "unicorn/prefer-type-error",
  "unicorn/prevent-abbreviations",
  "unicorn/relative-url-style",
  "unicorn/require-array-join-separator",
  "unicorn/require-number-to-fixed-digits-argument",
  "unicorn/require-post-message-target-origin",
  "unicorn/string-content",
  "unicorn/switch-case-braces",
  "unicorn/template-indent",
  "unicorn/text-encoding-identifier-case",
  "unicorn/throw-new-error",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'eslint-plugin-unused-imports'" 1`] = `
[
  "unused-imports/no-unused-imports",
  "unused-imports/no-unused-vars",
]
`;

exports[`Track changes in available plugin rules > should snapshot the list of rules for "'typescript-eslint'" 1`] = `
[
  "@typescript-eslint/adjacent-overload-signatures",
  "@typescript-eslint/array-type",
  "@typescript-eslint/await-thenable",
  "@typescript-eslint/ban-ts-comment",
  "@typescript-eslint/ban-tslint-comment",
  "@typescript-eslint/class-literal-property-style",
  "@typescript-eslint/class-methods-use-this",
  "@typescript-eslint/consistent-generic-constructors",
  "@typescript-eslint/consistent-indexed-object-style",
  "@typescript-eslint/consistent-return",
  "@typescript-eslint/consistent-type-assertions",
  "@typescript-eslint/consistent-type-definitions",
  "@typescript-eslint/consistent-type-exports",
  "@typescript-eslint/consistent-type-imports",
  "@typescript-eslint/default-param-last",
  "@typescript-eslint/dot-notation",
  "@typescript-eslint/explicit-function-return-type",
  "@typescript-eslint/explicit-member-accessibility",
  "@typescript-eslint/explicit-module-boundary-types",
  "@typescript-eslint/init-declarations",
  "@typescript-eslint/max-params",
  "@typescript-eslint/member-ordering",
  "@typescript-eslint/method-signature-style",
  "@typescript-eslint/naming-convention",
  "@typescript-eslint/no-array-constructor",
  "@typescript-eslint/no-array-delete",
  "@typescript-eslint/no-base-to-string",
  "@typescript-eslint/no-confusing-non-null-assertion",
  "@typescript-eslint/no-confusing-void-expression",
  "@typescript-eslint/no-deprecated",
  "@typescript-eslint/no-dupe-class-members",
  "@typescript-eslint/no-duplicate-enum-values",
  "@typescript-eslint/no-duplicate-type-constituents",
  "@typescript-eslint/no-dynamic-delete",
  "@typescript-eslint/no-empty-function",
  "@typescript-eslint/no-empty-interface",
  "@typescript-eslint/no-empty-object-type",
  "@typescript-eslint/no-explicit-any",
  "@typescript-eslint/no-extra-non-null-assertion",
  "@typescript-eslint/no-extraneous-class",
  "@typescript-eslint/no-floating-promises",
  "@typescript-eslint/no-for-in-array",
  "@typescript-eslint/no-implied-eval",
  "@typescript-eslint/no-import-type-side-effects",
  "@typescript-eslint/no-inferrable-types",
  "@typescript-eslint/no-invalid-this",
  "@typescript-eslint/no-invalid-void-type",
  "@typescript-eslint/no-loop-func",
  "@typescript-eslint/no-loss-of-precision",
  "@typescript-eslint/no-magic-numbers",
  "@typescript-eslint/no-meaningless-void-operator",
  "@typescript-eslint/no-misused-new",
  "@typescript-eslint/no-misused-promises",
  "@typescript-eslint/no-misused-spread",
  "@typescript-eslint/no-mixed-enums",
  "@typescript-eslint/no-namespace",
  "@typescript-eslint/no-non-null-asserted-nullish-coalescing",
  "@typescript-eslint/no-non-null-asserted-optional-chain",
  "@typescript-eslint/no-non-null-assertion",
  "@typescript-eslint/no-redeclare",
  "@typescript-eslint/no-redundant-type-constituents",
  "@typescript-eslint/no-require-imports",
  "@typescript-eslint/no-restricted-imports",
  "@typescript-eslint/no-restricted-types",
  "@typescript-eslint/no-shadow",
  "@typescript-eslint/no-this-alias",
  "@typescript-eslint/no-type-alias",
  "@typescript-eslint/no-unnecessary-boolean-literal-compare",
  "@typescript-eslint/no-unnecessary-condition",
  "@typescript-eslint/no-unnecessary-parameter-property-assignment",
  "@typescript-eslint/no-unnecessary-qualifier",
  "@typescript-eslint/no-unnecessary-template-expression",
  "@typescript-eslint/no-unnecessary-type-arguments",
  "@typescript-eslint/no-unnecessary-type-assertion",
  "@typescript-eslint/no-unnecessary-type-constraint",
  "@typescript-eslint/no-unnecessary-type-conversion",
  "@typescript-eslint/no-unnecessary-type-parameters",
  "@typescript-eslint/no-unsafe-argument",
  "@typescript-eslint/no-unsafe-assignment",
  "@typescript-eslint/no-unsafe-call",
  "@typescript-eslint/no-unsafe-declaration-merging",
  "@typescript-eslint/no-unsafe-enum-comparison",
  "@typescript-eslint/no-unsafe-function-type",
  "@typescript-eslint/no-unsafe-member-access",
  "@typescript-eslint/no-unsafe-return",
  "@typescript-eslint/no-unsafe-type-assertion",
  "@typescript-eslint/no-unsafe-unary-minus",
  "@typescript-eslint/no-unused-expressions",
  "@typescript-eslint/no-unused-vars",
  "@typescript-eslint/no-use-before-define",
  "@typescript-eslint/no-useless-constructor",
  "@typescript-eslint/no-useless-empty-export",
  "@typescript-eslint/no-var-requires",
  "@typescript-eslint/no-wrapper-object-types",
  "@typescript-eslint/non-nullable-type-assertion-style",
  "@typescript-eslint/only-throw-error",
  "@typescript-eslint/parameter-properties",
  "@typescript-eslint/prefer-as-const",
  "@typescript-eslint/prefer-destructuring",
  "@typescript-eslint/prefer-enum-initializers",
  "@typescript-eslint/prefer-find",
  "@typescript-eslint/prefer-for-of",
  "@typescript-eslint/prefer-function-type",
  "@typescript-eslint/prefer-includes",
  "@typescript-eslint/prefer-literal-enum-member",
  "@typescript-eslint/prefer-namespace-keyword",
  "@typescript-eslint/prefer-nullish-coalescing",
  "@typescript-eslint/prefer-optional-chain",
  "@typescript-eslint/prefer-promise-reject-errors",
  "@typescript-eslint/prefer-readonly",
  "@typescript-eslint/prefer-readonly-parameter-types",
  "@typescript-eslint/prefer-reduce-type-parameter",
  "@typescript-eslint/prefer-regexp-exec",
  "@typescript-eslint/prefer-return-this-type",
  "@typescript-eslint/prefer-string-starts-ends-with",
  "@typescript-eslint/prefer-ts-expect-error",
  "@typescript-eslint/promise-function-async",
  "@typescript-eslint/related-getter-setter-pairs",
  "@typescript-eslint/require-array-sort-compare",
  "@typescript-eslint/require-await",
  "@typescript-eslint/restrict-plus-operands",
  "@typescript-eslint/restrict-template-expressions",
  "@typescript-eslint/return-await",
  "@typescript-eslint/sort-type-constituents",
  "@typescript-eslint/strict-boolean-expressions",
  "@typescript-eslint/switch-exhaustiveness-check",
  "@typescript-eslint/triple-slash-reference",
  "@typescript-eslint/typedef",
  "@typescript-eslint/unbound-method",
  "@typescript-eslint/unified-signatures",
  "@typescript-eslint/use-unknown-in-catch-callback-variable",
]
`;
